"use strict";(()=>{var e={};e.id=294,e.ids=[294],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},59796:e=>{e.exports=require("zlib")},40452:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>q,originalPathname:()=>E,patchFetch:()=>j,requestAsyncStorage:()=>g,routeModule:()=>f,serverHooks:()=>v,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>Z});var i={};r.r(i),r.d(i,{DELETE:()=>m,GET:()=>p,PUT:()=>_});var s=r(95419),n=r(69108),a=r(99678),o=r(78070),d=r(32409),u=r(65256);let l=(0,d.eI)("https://placeholder.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY),c=u.Ry({first_name:u.Z_().min(1,"First name is required").optional(),last_name:u.Z_().min(1,"Last name is required").optional(),date_of_birth:u.Z_().min(1,"Date of birth is required").optional(),gender:u.Km(["male","female","other"]).optional(),class_id:u.Z_().min(1,"Class is required").optional(),guardian_name:u.Z_().min(1,"Guardian name is required").optional(),guardian_phone:u.Z_().min(10,"Valid phone number is required").optional(),guardian_email:u.Z_().email("Valid email is required").optional(),guardian_relationship:u.Z_().min(1,"Relationship is required").optional(),address:u.Z_().min(1,"Address is required").optional(),emergency_contact:u.Z_().min(10,"Valid emergency contact is required").optional(),blood_group:u.Z_().optional(),previous_school:u.Z_().optional(),enrollment_status:u.Km(["active","inactive","graduated","transferred"]).optional(),institution_id:u.Z_().uuid("Valid institution ID is required")});async function p(e,{params:t}){try{let{searchParams:r}=new URL(e.url),i=r.get("institution_id");if(!i)return o.Z.json({error:"Institution ID is required"},{status:400});let{data:s,error:n}=await l.from("students").select(`
        id,
        admission_number,
        first_name,
        last_name,
        date_of_birth,
        gender,
        guardian_name,
        guardian_phone,
        guardian_email,
        guardian_relationship,
        address,
        emergency_contact,
        blood_group,
        previous_school,
        enrollment_status,
        admission_date,
        current_academic_year,
        classes(
          id,
          name,
          section
        ),
        users(
          email,
          phone,
          avatar_url
        )
      `).eq("id",t.id).eq("institution_id",i).single();if(n){if("PGRST116"===n.code)return o.Z.json({error:"Student not found"},{status:404});return console.error("Error fetching student:",n),o.Z.json({error:"Failed to fetch student"},{status:500})}return o.Z.json({student:s})}catch(e){return console.error("Error in GET /api/students/[id]:",e),o.Z.json({error:"Internal server error"},{status:500})}}async function _(e,{params:t}){try{let r=await e.json(),i=c.safeParse(r);if(!i.success)return o.Z.json({error:"Invalid request data",details:i.error.errors},{status:400});let{first_name:s,last_name:n,date_of_birth:a,gender:d,class_id:u,guardian_name:p,guardian_phone:_,guardian_email:m,guardian_relationship:f,address:g,emergency_contact:h,blood_group:v,previous_school:q,enrollment_status:Z,institution_id:E}=i.data,{data:j}=await l.from("students").select("id, class_id").eq("id",t.id).eq("institution_id",E).single();if(!j)return o.Z.json({error:"Student not found"},{status:404});if(u&&u!==j.class_id){let{data:e}=await l.from("classes").select("id").eq("id",u).eq("institution_id",E).single();if(!e)return o.Z.json({error:"Invalid class ID"},{status:400})}let y={};void 0!==s&&(y.first_name=s),void 0!==n&&(y.last_name=n),void 0!==a&&(y.date_of_birth=a),void 0!==d&&(y.gender=d),void 0!==u&&(y.class_id=u),void 0!==p&&(y.guardian_name=p),void 0!==_&&(y.guardian_phone=_),void 0!==m&&(y.guardian_email=m),void 0!==f&&(y.guardian_relationship=f),void 0!==g&&(y.address=g),void 0!==h&&(y.emergency_contact=h),void 0!==v&&(y.blood_group=v),void 0!==q&&(y.previous_school=q),void 0!==Z&&(y.enrollment_status=Z);let{data:w,error:b}=await l.from("students").update(y).eq("id",t.id).eq("institution_id",E).select().single();if(b)return console.error("Error updating student:",b),o.Z.json({error:"Failed to update student"},{status:500});let x={};if(void 0!==s&&(x.first_name=s),void 0!==n&&(x.last_name=n),void 0!==_&&(x.phone=_),void 0!==a&&(x.date_of_birth=a),void 0!==d&&(x.gender=d),void 0!==g&&(x.address=g),Object.keys(x).length>0){let{error:e}=await l.from("users").update(x).eq("id",t.id);e&&console.error("Error updating user profile:",e)}return o.Z.json({message:"Student updated successfully",student:w})}catch(e){return console.error("Error in PUT /api/students/[id]:",e),o.Z.json({error:"Internal server error"},{status:500})}}async function m(e,{params:t}){try{let{searchParams:r}=new URL(e.url),i=r.get("institution_id");if(!i)return o.Z.json({error:"Institution ID is required"},{status:400});let{data:s}=await l.from("students").select("id").eq("id",t.id).eq("institution_id",i).single();if(!s)return o.Z.json({error:"Student not found"},{status:404});let{data:n}=await l.from("student_fees").select("id").eq("student_id",t.id).limit(1);if(n&&n.length>0)return o.Z.json({error:"Cannot delete student with existing fee records. Please deactivate instead."},{status:400});let{data:a}=await l.from("payments").select("id").eq("student_id",t.id).limit(1);if(a&&a.length>0)return o.Z.json({error:"Cannot delete student with existing payment records. Please deactivate instead."},{status:400});let{error:d}=await l.from("students").delete().eq("id",t.id).eq("institution_id",i);if(d)return console.error("Error deleting student:",d),o.Z.json({error:"Failed to delete student"},{status:500});let{error:u}=await l.from("users").delete().eq("id",t.id);u&&console.error("Error deleting user profile:",u);let{error:c}=await l.auth.admin.deleteUser(t.id);return c&&console.error("Error deleting user account:",c),o.Z.json({message:"Student deleted successfully"})}catch(e){return console.error("Error in DELETE /api/students/[id]:",e),o.Z.json({error:"Internal server error"},{status:500})}}let f=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/students/[id]/route",pathname:"/api/students/[id]",filename:"route",bundlePath:"app/api/students/[id]/route"},resolvedPagePath:"C:\\Users\\sg13c\\fee-management-saas\\app\\api\\students\\[id]\\route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:v,headerHooks:q,staticGenerationBailout:Z}=f,E="/api/students/[id]/route";function j(){return(0,a.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:h})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),i=t.X(0,[638,720,256],()=>r(40452));module.exports=i})();