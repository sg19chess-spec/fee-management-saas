"use strict";(()=>{var e={};e.id=393,e.ids=[393],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},59796:e=>{e.exports=require("zlib")},82050:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>q,originalPathname:()=>j,patchFetch:()=>v,requestAsyncStorage:()=>g,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>Z});var s={};t.r(s),t.d(s,{GET:()=>m,POST:()=>_});var i=t(95419),a=t(69108),n=t(99678),o=t(78070),u=t(32409),d=t(65256);let l=(0,u.eI)("https://placeholder.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY),c=d.Ry({admission_number:d.Z_().min(1,"Admission number is required"),first_name:d.Z_().min(1,"First name is required"),last_name:d.Z_().min(1,"Last name is required"),date_of_birth:d.Z_().min(1,"Date of birth is required"),gender:d.Km(["male","female","other"]),class_id:d.Z_().min(1,"Class is required"),guardian_name:d.Z_().min(1,"Guardian name is required"),guardian_phone:d.Z_().min(10,"Valid phone number is required"),guardian_email:d.Z_().email("Valid email is required"),guardian_relationship:d.Z_().min(1,"Relationship is required"),address:d.Z_().min(1,"Address is required"),emergency_contact:d.Z_().min(10,"Valid emergency contact is required"),blood_group:d.Z_().optional(),previous_school:d.Z_().optional(),admission_date:d.Z_().min(1,"Admission date is required"),institution_id:d.Z_().uuid("Valid institution ID is required")});async function m(e){try{let{searchParams:r}=new URL(e.url),t=r.get("institution_id"),s=parseInt(r.get("page")||"1"),i=parseInt(r.get("limit")||"10"),a=r.get("search")||"",n=r.get("class_id")||"",u=r.get("status")||"";if(!t)return o.Z.json({error:"Institution ID is required"},{status:400});let d=(s-1)*i,c=l.from("students").select(`
        id,
        admission_number,
        first_name,
        last_name,
        guardian_phone,
        guardian_email,
        enrollment_status,
        admission_date,
        classes(
          name,
          section
        )
      `,{count:"exact"}).eq("institution_id",t);a&&(c=c.or(`first_name.ilike.%${a}%,last_name.ilike.%${a}%,admission_number.ilike.%${a}%`)),n&&(c=c.eq("class_id",n)),u&&(c=c.eq("enrollment_status",u));let{data:m,error:_,count:p}=await c.order("first_name").range(d,d+i-1);if(_)return console.error("Error fetching students:",_),o.Z.json({error:"Failed to fetch students"},{status:500});return o.Z.json({students:m||[],pagination:{page:s,limit:i,total:p||0,totalPages:Math.ceil((p||0)/i)}})}catch(e){return console.error("Error in GET /api/students:",e),o.Z.json({error:"Internal server error"},{status:500})}}async function _(e){try{let r=await e.json(),t=c.safeParse(r);if(!t.success)return o.Z.json({error:"Invalid request data",details:t.error.errors},{status:400});let{admission_number:s,first_name:i,last_name:a,date_of_birth:n,gender:u,class_id:d,guardian_name:m,guardian_phone:_,guardian_email:p,guardian_relationship:g,address:f,emergency_contact:h,blood_group:q,previous_school:Z,admission_date:j,institution_id:v}=t.data,{data:w}=await l.from("students").select("id").eq("institution_id",v).eq("admission_number",s).single();if(w)return o.Z.json({error:"Admission number already exists"},{status:409});let{data:b}=await l.from("classes").select("id").eq("id",d).eq("institution_id",v).single();if(!b)return o.Z.json({error:"Invalid class ID"},{status:400});let{data:x,error:E}=await l.auth.admin.createUser({email:`${s}@${v}.student.local`,password:`student${s}`,email_confirm:!0,user_metadata:{role:"student",institution_id:v}});if(E)return console.error("Error creating user:",E),o.Z.json({error:"Failed to create user account"},{status:500});if(!x.user)return o.Z.json({error:"Failed to create user account"},{status:500});let{error:y}=await l.from("users").insert({id:x.user.id,institution_id:v,role:"student",first_name:i,last_name:a,email:`${s}@${v}.student.local`,phone:_,date_of_birth:n,gender:u,address:f});if(y)return console.error("Error creating user profile:",y),await l.auth.admin.deleteUser(x.user.id),o.Z.json({error:"Failed to create user profile"},{status:500});let{data:I,error:P}=await l.from("students").insert({id:x.user.id,institution_id:v,class_id:d,admission_number:s,admission_date:j,guardian_name:m,guardian_phone:_,guardian_email:p,guardian_relationship:g,emergency_contact:h,blood_group:q,previous_school:Z,current_academic_year:new Date().getFullYear().toString(),enrollment_status:"active"}).select().single();if(P)return console.error("Error creating student:",P),await l.auth.admin.deleteUser(x.user.id),await l.from("users").delete().eq("id",x.user.id),o.Z.json({error:"Failed to create student record"},{status:500});return o.Z.json({message:"Student created successfully",student:I},{status:201})}catch(e){return console.error("Error in POST /api/students:",e),o.Z.json({error:"Internal server error"},{status:500})}}let p=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/students/route",pathname:"/api/students",filename:"route",bundlePath:"app/api/students/route"},resolvedPagePath:"C:\\Users\\sg13c\\fee-management-saas\\app\\api\\students\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:f,serverHooks:h,headerHooks:q,staticGenerationBailout:Z}=p,j="/api/students/route";function v(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:f})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,720,256],()=>t(82050));module.exports=s})();